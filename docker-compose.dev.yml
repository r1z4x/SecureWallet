

services:
  # MySQL Database (Development)
  mysql:
    image: mysql:8.0
    container_name: securewallet_mysql_dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-CHANGE_THIS_DEV_ROOT_PASSWORD}
      MYSQL_DATABASE: securewallet_dev
      MYSQL_USER: securewallet_dev
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-CHANGE_THIS_DEV_DB_PASSWORD}
    # SECURE: Comment out ports for production-like security in dev
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - securewallet_network_dev

  # MongoDB Database (Development)
  mongodb:
    image: mongo:7.0
    container_name: securewallet_mongodb_dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-CHANGE_THIS_DEV_MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: securewallet_dev
    # SECURE: Comment out ports for production-like security in dev
    ports:
      - "27018:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - securewallet_network_dev

  # Redis Cache (Development)
  redis:
    image: redis:7.2-alpine
    container_name: securewallet_redis_dev
    # SECURE: Comment out ports for production-like security in dev
    ports:
      - "6380:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-CHANGE_THIS_DEV_REDIS_PASSWORD}
    volumes:
      - redis_dev_data:/data
    networks:
      - securewallet_network_dev

  # Backend Application (Go - Development)
  backend:
    build:
      context: .
      dockerfile:  build/docker/Dockerfile.go.dev
    container_name: securewallet_backend_dev
    ports:
      - "8081:8080"
    env_file:
      - .env
    volumes:
      - .:/app
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=securewallet_dev
      - DB_PASSWORD=securewalletpass_dev
      - DB_NAME=securewallet_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8080
      - ENVIRONMENT=development
      - GIN_MODE=debug
      - RESET_DATABASE_ON_STARTUP=${RESET_DATABASE_ON_STARTUP:-false}
    depends_on:
      - mysql
      - mongodb
      - redis
    networks:
      - securewallet_network_dev

  # Frontend Application (Development)
  frontend:
    build: ./frontend
    container_name: securewallet_frontend_dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8081/api
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    command: npm run dev
    depends_on:
      - backend
    networks:
      - securewallet_network_dev

volumes:
  mysql_dev_data:
  mongodb_dev_data:
  redis_dev_data:

networks:
  securewallet_network_dev:
    driver: bridge
