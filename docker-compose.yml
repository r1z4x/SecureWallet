

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: securewallet_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: securewallet
      MYSQL_USER: securewallet
      MYSQL_PASSWORD: securewalletpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - securewallet_network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: securewallet_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      MONGO_INITDB_DATABASE: wallet_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - securewallet_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: securewallet_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - securewallet_network

  # Backend Application (Go)
  backend:
    build:
      context: .
      dockerfile:  build/docker/Dockerfile.go
    container_name: securewallet_backend
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - RESET_DATABASE_ON_STARTUP=true
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - securewallet_network

  # Frontend Application (Node.js Vue.js)
  frontend:
    build: ./frontend
    container_name: securewallet_frontend
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - securewallet_network

volumes:
  mysql_data:
  mongodb_data:
  redis_data:

networks:
  securewallet_network:
    driver: bridge
