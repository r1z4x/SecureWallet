version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: owasp_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wallet_app
      MYSQL_USER: wallet_user
      MYSQL_PASSWORD: wallet_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - owasp_network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: owasp_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      MONGO_INITDB_DATABASE: wallet_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - owasp_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: owasp_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - owasp_network

  # Backend Application (Python FastAPI)
  backend:
    build: .
    container_name: owasp_backend
    restart: unless-stopped
    ports:
      - "8080:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - owasp_network

  # Frontend Application (Node.js Vue.js)
  frontend:
    build: ./frontend
    container_name: owasp_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - owasp_network

volumes:
  mysql_data:
  mongodb_data:
  redis_data:

networks:
  owasp_network:
    driver: bridge
